/* Локальне підключення шрифтів */
/* @import url("fonts.css"); */

/* Скидання стилів */
@import url("reset.css");

body {
	font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
	background-color: #333;
	color: #fff;
}

/* ======================================================== */
/* --------------- CSS-властивості блоків ----------------- */
/* ======================================================== */

.block {
	background-color: #77608d;
}
.inline {
	background-color: #7a956b;
}
.inline-block {
	background-color: #794f45;
}

/* Відступи */
/* Відступи неочікувано працюють для рядкових об'єктів */
/* Відступи прийнято задавати для батьківського об'єкту */

/*
padding - Внутрішній відступ. 
Відступи ВСЕРЕДЕНІ об'єкту. 
Від кордонів об'єкту ДО ЙОГО КОНТЕНТУ
НЕ успадковується

Анатомія значення відступів:
- Цифрове значення + одиниця виміру (10px, 50%... і т.д.)
- Не може бути від'ємним
- При вказанні значення у відсотках
відсоток береться від ШИРИНИ батьківського об'єкту,
навіть для вертикальних відступів 

padding: з_усіх_сторін;
padding: зверху_знизу зправа_зліва;
padding: зверху зправа_зліва знизу;
padding: зверху зправа знизу зліва;
(годинникова стрілка)

padding-top: значення;
padding-right: значення;
padding-bottom: значення;
padding-left: значення;
*/

.block {
	/* padding: 20px; */
	/* padding: 20px 50px; */
	/* padding: 20px 50px 30px; */
	/* padding: 10px 20px 15px 30px; */

	/* 
	padding-left: 10px;
	padding-bottom: 20px;
	 */

	/* padding-top: 10%; */
}
/* Не вірно */
.block p {
	/* padding-bottom: 50px; */
}
/* Вірно */
.block {
	/* padding-bottom: 50px; */
}

.inline {
	/* padding: 20px; */
}
.inline-block {
	/* padding: 20px; */
}

/*
margin - Зовнішній відступ.
Відступи ЗОВНІ об'єкту до інших об'єктів. 
НЕ успадковується

Особливості:
- Значення можуть бути від'ємними!
- Спрацьовує ефект "схлопування" 
	(накладання, колапс, згортання)

margin: з_усіх_сторін;
margin: зверху_знизу зправа_зліва;
margin: зверху зправа_зліва знизу;
margin: зверху зправа знизу зліва;

margin-top: значення;
margin-right: значення;
margin-bottom: значення;
margin-left: значення;
*/

.block {
	/* margin: 50px; */
	/* margin: 10px 30px 50px 5px; */
	/* 
	margin-left: -50px;
	margin-top: -10px;
	 */

	/* margin-top: 10%; */
}

/* *Не вірно */
/* *у випадках, коли відступ потрібен 
	саме від батьвківського елементу 
*/
.block p {
	/* margin-bottom: 50px; */
}
/* Вірно */
.block {
	/* margin-bottom: 50px; */
}

.inline {
	/* 
	margin-left: 50px;
	margin-right: 20px;
	 */
}
.inline-block {
	/* margin: 20px; */
}

/*
Ефект "схлопування" (накладання, колапс, згортання) margin.
Виникає коли зовнішній відступ заданий сусіднім об'єктам.

Значання відступу буде дорівнювати 
найбільшому з 2х значеннь.
Відступ margin прийнято задавати з ліва направо
та зверху вниз
*/

.block {
	/* Цей переміг :) */
	/* margin-bottom: 100px; */
}
.block-1 {
	/* 
	margin-top: 50px;
	background-color: yellowgreen;
	 */
}

/* Від'ємні значення */

.block {
}
.block-1 {
	/* 
		Відбудеться "підняття" об'єкту вверх
		разом з усіма наступними елементами в коді
	*/
	/* 
	margin-top: -20px;
	background-color: yellowgreen;
	 */
}

/* 
	Для того, щоб вдало застосовати той чи інший відступ
	проговорюємо вголос:
	1) який тип відступу треба?
	2) для якого об'єкту треба задати відступ?
*/

/*
	width - чітко задає ширину блочного (блочно-рядкового) 
	об'єкту.
	НЕ працює зі рядковими об'єктами
	width: значення;
	auto - (за замовченням) автоматичний розмір
	НЕ успадковується
*/
/*
	max-width 
	Встановлює максимальну ширину 
	блочних (блочно-рядкових) тегів 
	Властивість не успадковується 
	НЕ працює зі рядковими об'єктами
*/
/*
	min-width 
	Встановлює мінімальну ширину 
	блочних (блочно-рядкових) тегів 
	Властивість не успадковується 
	НЕ працює зі рядковими об'єктами
*/
/* 
	Значення у %
	% береться від ширини батьківського об'єкту
*/

.block {
	/* width: 200px; */
	/* width: 33.333%; */
	/* max-width: 500px; */
	/* min-width: 500px; */
}
.inline {
	/* width: 200px; */
	/* max-width: 500px;
	min-width: 500px; */
}
.inline-block {
	/* width: 100%; */
	/* max-width: 100%; */
	/* width: 150px; */
}

/*
height 
Встановлює чітку висоту блочних (блочно-рядкових) тегів 
Властивість не успадковується 
НЕ працює зі рядковими об'єктами

min-height 
Встановлює мінімальну висоту 
блочних (блочно-рядкових) тегів 
Властивість не успадковується 
НЕ працює зі рядковими об'єктами

max-height 
Встановлює максимальну 
висоту блочних (блочно-рядкових) тегів 
Властивість не успадковується 
НЕ працює зі рядковими об'єктами
*/

.block {
	/* height: 200px; */

	/* min-height: 100px; */
	/* max-height: 200px; */
}
.inline {
	/* height: 2000px; */
}
.inline-block {
	/* height: 150px; */
}

/*
box-sizing
Застосовується для зміни алгоритму обчислення величин
content-box - (за замовченням) додає відступи
до розміру об'єкту
border-box - значення розмірів враховують відступи
*/

.block {
	/* 
	width: 200px;
	padding: 20px;
	 */
}
.inline {
}
.inline-block {
}

/*
	overflow 
	Керує відображенням контенту блочного елементу
	Властивість не успадковується
	visible - (за замовченням) Відображається усесь 
	контент елемента, навіть за межами встановлених розмірів
	hidden - Відображається тільки контент всередені елемента,
	clip - Майже теж саме що й hidden.
	все інше буде сховано
	scroll - Завжди додаються смужки прокрутки
	auto - Смужки прокрутки додаються лише за необхідністю

	Тільки вертикаль
	overflow-y: ; 
	Тільки горизонталь
	overflow-x: ;
*/

.block {
	/* 
	height: 100px;
	overflow: auto;
	 */
}

/*
vertical-align - Визначає вертикальне верівнювання 
блочно-рядкових або блочно-рядкових + рядкових об'єктів.
top
middle
bottom
*/

.inline-block {
	/* width: 200px; */
	/* vertical-align: middle; */
}

/*
	display
	Багатоцільова властивість яка задає 
	глобальні параметри тега. 
	Властивість не успадковується
	block - (за замовченням для блочних об'ектів) 
	Елемент відображається як блочний.
	inline - (за замовченням для рядкових об'ектів)  
	Елемент відображається як рядковий.
	inline-block - (блочно-рядковий) Елемент відображається як 
	рядковий але з можливістю 
	використання усіх CSS-властивостей.
	none - Елемент не виводиться в браузер. 
	Інші елементи займають його місце.
	Не приймає участь у обробці браузером.
*/

.block {
	/* 
	width: 300px;
	padding: 15px;
	margin-bottom: 20px;
	display: inline; 
	*/
	/* display: block; (за замовченням) */
}
.inline {
	width: 300px;
	padding: 20px;
	margin-bottom: 50px;
	display: inline-block;
	/* display: block; */
	/* display: inline; (за замовченням) */
}
.inline-block {
	/* display: inline-block; (за замовченням) */
	/* 
	Нічого не змінює 
	display: inline;
	*/
}

/* Центрування блоку */
/*
1) Об'єкт має бути блочним
2) Об'єкт має мати меньшу ширину за батьківський елемент
3) Додаємо margin: 0 auto;
*/

.block {
	/* 
	width: 90%;
	margin: 0 auto;
	 */
}

/* Приклад зміни типу блоку */
.title {
	text-transform: uppercase;
	margin-bottom: 10px;
	font-weight: 700;
	font-size: 30px;
}
.link {
	color: yellow;
	margin-bottom: 20px;
}
.text {
	line-height: 1.4;
}

/* Тимчасовий приклад побудови конструкції */

.section {
	max-width: 500px;
	margin: 0 auto;
	overflow: hidden;

	/* display: none; */
}

.items {
	margin-left: -5px;
	margin-right: -5px;
	font-size: 0;
}
.item {
	width: 33.333%;
	display: inline-block;
	margin-bottom: 10px;
	padding-left: 5px;
	padding-right: 5px;
	vertical-align: top;
}
.content {
	padding: 20px;
	background-color: #77608d;
	text-align: center;
	font-size: 30px;
}

/* Відступ у першого рядка */
.text {
	/* text-indent: 20px; */
}
